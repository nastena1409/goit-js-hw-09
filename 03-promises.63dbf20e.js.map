{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAoCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAE3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EAEFF,EAAQ,C,SAAEH,E,MAAUC,IAGpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA/CAQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBAEJ,MACEC,UAAYb,MAAAc,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAIM,cAER,IAAIC,EAAaC,OAAOL,EAAMM,OAC9B,MAAMC,EAAYF,OAAOJ,EAAKK,OAE9B,IAAK,IAAIE,EAAI,EAAGA,GAAKN,EAAOI,MAAOE,GAAK,EAGtCxB,EAAcwB,EAAGJ,GACdK,KAAKC,GACLC,MAAMC,GAETR,GAAcG,EAEhB,SAASG,GAAUzB,SAAEA,EAAQC,MAAEA,IAE7B2B,EAAA/B,GAASgC,OAAOC,QAAQ,uBAAqB9B,QAAiBC,M,CAGhE,SAAS0B,GAAQ3B,SAAEA,EAAQC,MAAEA,IAE3B2B,EAAA/B,GAASgC,OAAOE,QAAQ,sBAAoB/B,QAAeC,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form')\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  const {\n    elements: { delay, step, amount }\n  } = evt.currentTarget;\n  \n  let delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n\n  for (let i = 1; i <= amount.value; i += 1) {\n    //console.log('step',typeof stepValue)\n    //console.log('delay',typeof delayValue)\n    createPromise(i, delayValue)\n      .then(onResolve)\n      .catch(onError)\n    \n    delayValue += stepValue;\n  }\n  function onResolve({ position, delay }) {\n    //console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  }\n\n  function onError({ position, delay }) {\n    //console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  })  \n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","evt","preventDefault","elements","delay1","step","amount","currentTarget","delayValue","Number","value","stepValue","i","then","onResolve","catch","onError","$parcel$interopDefault","Notify","success","failure"],"version":3,"file":"03-promises.63dbf20e.js.map"}