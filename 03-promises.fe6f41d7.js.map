{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAoCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAE3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EAEFF,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IA/CMQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBASJ,IAPA,IAEqBC,EAAjBF,EAAIG,cADNC,SAAYC,EAAKH,EAALb,MAAOiB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAGvBC,EAAaC,OAAOJ,EAAMK,OACxBC,EAAYF,OAAOH,EAAKI,OAErBE,EAAI,EAAGA,GAAKL,EAAOG,MAAOE,GAAK,EAGtCzB,EAAcyB,EAAGJ,GACdK,KAAKC,GACLC,MAAMC,GAETR,GAAcG,EAEhB,SAASG,EAAUG,G,IAAE7B,EAAF6B,EAAE7B,SAAUC,EAAZ4B,EAAY5B,MAE7B6B,EAAAjC,GAASkC,OAAOC,QAAQ,uBAAwCC,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,M,CAGxE,SAAS2B,EAAQC,G,IAAE7B,EAAF6B,EAAE7B,SAAUC,EAAZ4B,EAAY5B,MAE3B6B,EAAAjC,GAASkC,OAAOG,QAAQ,sBAAqCD,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form')\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  const {\n    elements: { delay, step, amount }\n  } = evt.currentTarget;\n  \n  let delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n\n  for (let i = 1; i <= amount.value; i += 1) {\n    //console.log('step',typeof stepValue)\n    //console.log('delay',typeof delayValue)\n    createPromise(i, delayValue)\n      .then(onResolve)\n      .catch(onError)\n    \n    delayValue += stepValue;\n  }\n  function onResolve({ position, delay }) {\n    //console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  }\n\n  function onError({ position, delay }) {\n    //console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  })  \n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","evt","preventDefault","_elements","currentTarget","elements","delay1","step","amount","delayValue","Number","value","stepValue","i","then","onResolve","catch","onError","param","$parcel$interopDefault","Notify","success","concat","failure"],"version":3,"file":"03-promises.fe6f41d7.js.map"}